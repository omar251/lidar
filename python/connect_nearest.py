import pygame
import math

def distance(point1, point2):
    return math.sqrt((point2[0] - point1[0])**2 + (point2[1] - point1[1])**2)

pygame.init()
width, height = 800, 600
screen = pygame.display.set_mode((width, height))
clock = pygame.time.Clock()

points = [(414.0, 246.0), (419.0, 246.0), (438.0, 248.0), (460.0, 268.0), (460.0, 290.0), (458.0, 328.0), (459.0, 329.0), (451.0, 336.0), (449.0, 337.0), (448.0, 337.0), (473.0, 359.0), (430.0, 345.0), (423.0, 345.0), (420.0, 344.0), (404.0, 344.0), (403.0, 344.0), (398.0, 344.0), (395.0, 344.0), (379.0, 343.0), (377.0, 343.0), (363.0, 342.0), (358.0, 330.0), (446.0, 300.0), (339.0, 317.0), (353.0, 273.0), (354.0, 273.0), (373.0, 260.0), (376.0, 258.0), (394.0, 244.0), (408.0, 245.0), (412.0, 246.0), (448.0, 243.0), (451.0, 247.0), (450.0, 255.0), (450.0, 260.0), (460.0, 268.0), (459.0, 321.0), (443.0, 315.0), (460.0, 302.0), (459.0, 324.0), (429.0, 345.0), (407.0, 344.0), (406.0, 344.0), (404.0, 344.0), (401.0, 344.0), (392.0, 343.0), (390.0, 343.0), (353.0, 325.0), (340.0, 307.0), (340.0, 305.0), (340.0, 302.0), (353.0, 273.0), (358.0, 267.0), (366.0, 263.0), (373.0, 260.0), (375.0, 258.0), (376.0, 258.0), (377.0, 257.0), (377.0, 257.0), (392.0, 244.0), (398.0, 245.0), (403.0, 245.0), (451.0, 242.0), (449.0, 249.0), (450.0, 252.0), (453.0, 268.0), (461.0, 276.0), (461.0, 280.0), (517.0, 338.0), (460.0, 292.0), (468.0, 323.0), (459.0, 312.0), (495.0, 364.0), (508.0, 401.0), (432.0, 309.0), (426.0, 345.0), (425.0, 345.0), (420.0, 345.0), (419.0, 345.0), (413.0, 344.0), (412.0, 344.0), (406.0, 344.0), (468.0, 322.0), (361.0, 333.0), (360.0, 332.0), (359.0, 331.0), (358.0, 330.0), (349.0, 320.0), (351.0, 275.0), (352.0, 275.0), (353.0, 273.0), (354.0, 273.0), (355.0, 272.0), (413.0, 246.0), (456.0, 318.0), (427.0, 247.0), (431.0, 247.0), (336.0, 280.0), (451.0, 262.0), (460.0, 268.0), (461.0, 284.0), (460.0, 294.0), (379.0, 273.0), (456.0, 336.0), (447.0, 344.0), (446.0, 345.0), (444.0, 346.0), (443.0, 346.0), (441.0, 345.0), (438.0, 346.0), (437.0, 345.0), (435.0, 345.0), (433.0, 346.0), (432.0, 345.0), (430.0, 345.0), (427.0, 345.0), (378.0, 343.0), (377.0, 343.0), (361.0, 334.0), (361.0, 333.0), (359.0, 332.0), (356.0, 328.0), (349.0, 320.0), (389.0, 240.0), (341.0, 285.0), (341.0, 283.0), (341.0, 280.0), (347.0, 277.0), (349.0, 275.0), (351.0, 275.0), (352.0, 275.0), (403.0, 245.0), (405.0, 245.0), (408.0, 245.0), (410.0, 245.0), (417.0, 245.0), (421.0, 246.0), (452.0, 267.0), (460.0, 268.0), (353.0, 268.0), (459.0, 321.0), (492.0, 351.0), (329.0, 398.0), (506.0, 399.0), (443.0, 346.0), (433.0, 340.0), (418.0, 345.0), (416.0, 345.0), (413.0, 345.0), (390.0, 344.0), (387.0, 343.0), (366.0, 342.0), (362.0, 343.0), (357.0, 269.0), (358.0, 267.0), (360.0, 267.0), (365.0, 264.0), (366.0, 263.0), (369.0, 262.0), (375.0, 258.0), (377.0, 257.0), (391.0, 245.0), (402.0, 245.0), (406.0, 245.0), (410.0, 245.0), (411.0, 246.0), (433.0, 247.0), (440.0, 249.0), (461.0, 269.0), (461.0, 269.0), (460.0, 294.0), (460.0, 304.0), (460.0, 305.0), (459.0, 313.0), (459.0, 319.0), (459.0, 326.0), (459.0, 327.0), (451.0, 334.0), (517.0, 391.0), (427.0, 345.0), (397.0, 344.0), (385.0, 343.0), (360.0, 332.0), (359.0, 332.0), (356.0, 328.0), (354.0, 326.0), (352.0, 324.0), (339.0, 320.0), (345.0, 316.0), (540.0, 348.0), (353.0, 273.0), (363.0, 265.0), (365.0, 264.0), (380.0, 254.0), (414.0, 246.0), (438.0, 248.0), (451.0, 265.0), (452.0, 267.0), (461.0, 272.0), (460.0, 297.0), (459.0, 331.0), (487.0, 348.0), (449.0, 337.0), (431.0, 346.0), (417.0, 344.0), (407.0, 344.0), (406.0, 344.0), (403.0, 344.0), (403.0, 344.0), (402.0, 344.0), (397.0, 344.0), (361.0, 334.0), (358.0, 330.0), (355.0, 327.0), (353.0, 325.0), (350.0, 320.0), (340.0, 306.0), (340.0, 305.0), (359.0, 267.0), (368.0, 262.0), (372.0, 260.0), (376.0, 258.0), (377.0, 257.0), (378.0, 256.0), (379.0, 255.0), (393.0, 244.0), (406.0, 245.0), (451.0, 240.0), (461.0, 278.0), (461.0, 281.0), (460.0, 299.0), (459.0, 321.0), (441.0, 346.0), (440.0, 346.0), (438.0, 345.0), (436.0, 346.0), (434.0, 345.0), (433.0, 345.0), (430.0, 345.0), (429.0, 345.0), (428.0, 345.0), (426.0, 345.0), (425.0, 345.0), (413.0, 344.0), (410.0, 344.0), (389.0, 343.0), (361.0, 334.0), (356.0, 328.0), (350.0, 321.0), (339.0, 321.0), (340.0, 297.0), (493.0, 326.0), (394.0, 244.0), (398.0, 245.0), (400.0, 245.0), (413.0, 246.0), (416.0, 246.0), (418.0, 246.0), (466.0, 326.0), (461.0, 283.0), (460.0, 284.0), (461.0, 286.0), (460.0, 288.0), (460.0, 289.0), (459.0, 310.0), (459.0, 325.0), (491.0, 359.0), (447.0, 341.0), (440.0, 346.0), (393.0, 344.0), (381.0, 343.0), (377.0, 343.0), (368.0, 342.0), (368.0, 342.0), (364.0, 343.0), (353.0, 324.0), (340.0, 307.0), (455.0, 319.0), (353.0, 274.0), (397.0, 244.0), (400.0, 245.0), (406.0, 245.0), (417.0, 246.0), (448.0, 241.0), (450.0, 246.0), (460.0, 324.0), (450.0, 261.0), (451.0, 266.0), (459.0, 267.0), (461.0, 272.0), (461.0, 277.0), (461.0, 278.0), (461.0, 281.0), (461.0, 283.0), (460.0, 292.0), (459.0, 310.0), (459.0, 314.0), (491.0, 335.0), (433.0, 345.0), (430.0, 345.0), (414.0, 345.0), (404.0, 344.0), (403.0, 344.0), (396.0, 344.0), (366.0, 342.0), (361.0, 334.0), (341.0, 286.0), (341.0, 285.0), (341.0, 283.0), (351.0, 275.0), (352.0, 275.0), (359.0, 267.0), (548.0, 300.0), (377.0, 257.0), (400.0, 245.0), (402.0, 245.0), (403.0, 245.0), (404.0, 245.0), (406.0, 245.0), (428.0, 247.0), (430.0, 247.0), (450.0, 258.0), (461.0, 269.0), (461.0, 271.0), (461.0, 273.0), (460.0, 304.0), (460.0, 305.0), (459.0, 310.0), (451.0, 336.0), (432.0, 345.0), (430.0, 345.0), (428.0, 345.0), (427.0, 345.0), (425.0, 344.0), (422.0, 345.0), (518.0, 331.0), (407.0, 344.0), (420.0, 305.0), (385.0, 343.0), (377.0, 343.0), (363.0, 342.0), (362.0, 343.0), (360.0, 342.0), (358.0, 342.0), (373.0, 319.0), (353.0, 325.0), (339.0, 318.0), (340.0, 297.0), (340.0, 296.0), (341.0, 292.0), (341.0, 288.0), (353.0, 273.0), (356.0, 270.0), (375.0, 258.0), (376.0, 258.0), (376.0, 257.0), (379.0, 255.0), (394.0, 244.0), (395.0, 244.0), (450.0, 315.0), (420.0, 246.0), (460.0, 306.0), (460.0, 307.0), (482.0, 338.0), (493.0, 365.0), (431.0, 345.0), (429.0, 345.0), (423.0, 345.0), (421.0, 345.0), (420.0, 345.0), (390.0, 344.0), (381.0, 343.0), (380.0, 343.0), (368.0, 341.0), (363.0, 343.0), (361.0, 342.0), (361.0, 334.0), (360.0, 332.0), (352.0, 324.0), (350.0, 321.0), (341.0, 293.0), (341.0, 283.0), (341.0, 282.0), (353.0, 273.0), (356.0, 270.0), (356.0, 270.0), (358.0, 268.0), (358.0, 268.0), (359.0, 267.0), (376.0, 258.0), (380.0, 254.0), (400.0, 245.0), (417.0, 246.0), (420.0, 246.0), (460.0, 288.0), (460.0, 298.0), (460.0, 299.0), (482.0, 336.0), (524.0, 342.0), (430.0, 345.0), (416.0, 344.0), (413.0, 344.0), (412.0, 344.0), (410.0, 344.0), (403.0, 344.0), (402.0, 344.0), (400.0, 344.0), (397.0, 344.0), (397.0, 344.0), (369.0, 341.0), (357.0, 329.0), (356.0, 328.0), (354.0, 325.0), (340.0, 298.0), (354.0, 272.0), (356.0, 270.0), (357.0, 268.0), (362.0, 266.0), (363.0, 265.0), (365.0, 264.0), (374.0, 259.0), (377.0, 257.0), (380.0, 254.0), (381.0, 252.0), (460.0, 298.0), (463.0, 330.0), (488.0, 351.0), (528.0, 313.0), (461.0, 304.0), (420.0, 345.0), (416.0, 344.0), (412.0, 344.0), (396.0, 344.0), (368.0, 342.0), (359.0, 332.0), (354.0, 325.0), (353.0, 325.0), (350.0, 322.0), (340.0, 320.0), (358.0, 268.0), (361.0, 266.0), (365.0, 264.0), (366.0, 263.0), (368.0, 262.0), (372.0, 260.0), (381.0, 252.0), (400.0, 245.0), (427.0, 216.0), (451.0, 243.0), (450.0, 259.0), (450.0, 261.0), (461.0, 270.0), (461.0, 277.0), (461.0, 279.0), (460.0, 296.0), (460.0, 305.0), (460.0, 306.0), (458.0, 320.0), (459.0, 319.0)]

connected_points = []

pygame.display.set_caption("Connecting Closest Points")
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    screen.fill((0, 0, 0))

    for point in points:
        pygame.draw.circle(screen, (255, 0, 0), point, 1)
    
    for i in range(len(points)):
        closest_point = None
        min_distance = float(6)

        for j in range(i+1, len(points)):
            dist = distance(points[i], points[j])
            if dist < min_distance:
                min_distance = dist
                closest_point = j

        if closest_point is not None:
            connected_points.append((points[i], points[closest_point]))
            pygame.draw.line(screen, (255, 0, 0), points[i], points[closest_point], 2)
            pygame.display.flip()

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
